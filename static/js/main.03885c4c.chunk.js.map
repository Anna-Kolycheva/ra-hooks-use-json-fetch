{"version":3,"sources":["components/component/Component.jsx","components/useFetch/useFetch.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Component","url","opts","useState","data","setData","isLoading","setIsLoading","error","setError","useEffect","a","fetch","response","ok","Error","statusText","json","message","fetchData","useFetch","className","status","App","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAwBeA,MAnBf,YAA6B,IAAD,ECHb,SAAkBC,GAAmB,IAAdC,EAAa,uDAAN,KAAM,EACxBC,mBAAS,MADe,mBACzCC,EADyC,KACnCC,EADmC,OAEdF,oBAAS,GAFK,mBAEzCG,EAFyC,KAE9BC,EAF8B,OAGtBJ,mBAAS,MAHa,mBAGzCK,EAHyC,KAGlCC,EAHkC,KA2BhD,OAtBAC,qBAAU,YACQ,uCAAG,8BAAAC,EAAA,6DACfJ,GAAa,GADE,kBAGWK,MAAMX,EAAKC,GAHtB,WAGNW,EAHM,QAIEC,GAJF,sBAKH,IAAIC,MAAMF,EAASG,YALhB,uBAQOH,EAASI,OARhB,OAQNA,EARM,OASZZ,EAAQY,GACRR,EAAS,MAVG,kDAYZA,EAAS,KAAES,SAZC,yBAcZX,GAAa,GAdD,6EAAH,oDAkBfY,KACA,CAAClB,EAAKC,IAEF,CAACE,EAAME,EAAWE,GDvBQY,CADR,EAAPnB,KAAO,mBAClBG,EADkB,KACZE,EADY,KACDE,EADC,KAGzB,OACG,sBAAKa,UAAU,UAAf,UACIf,GACE,qBAAKe,UAAU,UAAf,2KAEFb,GAAS,sBAAKa,UAAU,QAAf,yGAAyCb,EAAzC,OACTJ,GACE,qBAAIiB,UAAU,OAAd,2JAAiDjB,EAAKkB,cEDnDC,MAVf,WACG,OACG,sBAAKF,UAAU,MAAf,UACG,cAAC,EAAD,CAAWpB,IAAG,UAAKuB,kCAAL,UACd,cAAC,EAAD,CAAWvB,IAAG,UAAKuB,kCAAL,aACd,cAAC,EAAD,CAAWvB,IAAG,UAAKuB,kCAAL,eCGRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM3Bb,M","file":"static/js/main.03885c4c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport useFetch from '../useFetch/useFetch';\nimport './Component.css';\n\nfunction Component({ url }) {\n   const [data, isLoading, error] = useFetch(url);\n\n   return (\n      <div className=\"example\">\n         {isLoading && (\n            <div className=\"loading\">Индикатор загрузки: Загрузка... </div>\n         )}\n         {error && <div className=\"error\">Получение ошибки:{error} </div>}\n         {data && (\n            <ul className=\"data\">Успешное получение данных: {data.status}</ul>\n         )}\n      </div>\n   );\n}\n\nComponent.propTypes = {\n   url: PropTypes.string.isRequired,\n};\nexport default Component;\n","import { useState, useEffect } from 'react';\n\nexport default function useFetch(url, opts = null) {\n   const [data, setData] = useState(null);\n   const [isLoading, setIsLoading] = useState(false);\n   const [error, setError] = useState(null);\n\n   useEffect(() => {\n      const fetchData = async () => {\n         setIsLoading(true);\n         try {\n            const response = await fetch(url, opts);\n            if (!response.ok) {\n               throw new Error(response.statusText);\n            }\n\n            const json = await response.json();\n            setData(json);\n            setError(null);\n         } catch (e) {\n            setError(e.message);\n         } finally {\n            setIsLoading(false);\n         }\n      };\n\n      fetchData();\n   }, [url, opts]);\n\n   return [data, isLoading, error];\n}\n","import React from 'react';\nimport './App.css';\nimport Component from './components/component/Component';\n\nfunction App() {\n   return (\n      <div className=\"App\">\n         <Component url={`${process.env.REACT_APP_URL}data`} />\n         <Component url={`${process.env.REACT_APP_URL}loading`} />\n         <Component url={`${process.env.REACT_APP_URL}error`} />\n      </div>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}